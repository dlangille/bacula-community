#
# Kubernetes Plugin   Bacula Director Configuration file
#

Director {                              # define myself
  Name = @hostname@-dir
  DIRPort = @dirport@                   # where we listen for UA connections
  QueryFile = "@scriptdir@/query.sql"
  WorkingDirectory = "@working_dir@"
  PidDirectory = "@piddir@"
  SubSysDirectory = "@subsysdir@"
  Maximum Concurrent Jobs = 1
  Password = "pNvX1WiXnwv2C/F7E52LGvw6rKjbbPvu2kyuPa9pVaL3"         # Console password
  Messages = Standard
}

JobDefs {
  Name = "BackupJob"
  Type = Backup
  Pool = Default
  Storage = File
  Messages = Standard
  Priority = 10
  Client=@hostname@-fd
  Write Bootstrap = "@working_dir@/%n-%f.bsr"
}

JobDefs {
  Name = "Default"
  Type = Backup
  Client=@hostname@-fd
  Level = Full
  Storage = File1
  Messages = Standard
  Write Bootstrap = "@working_dir@/%c.bsr"
  Pool = Default
  SpoolData = yes
  Max Run Time = 30min
}

Job {
  Name = "PluginK8STestProtocol1"
  JobDefs = "BackupJob"
  FileSet="TestPluginK8SSetProtocol1"
  Accurate = Yes
}

FileSet {
  Name = "TestPluginK8SSetProtocol1"
  Include {
    Options { signature=MD5 }
    Plugin = "kubernetes:"
  }
}

Job {
  Name = "PluginK8STestProtocol2"
  JobDefs = "BackupJob"
  FileSet="TestPluginK8SSetProtocol2"
}

FileSet {
  Name = "TestPluginK8SSetProtocol2"
  Include {
    Options { signature=MD5 }
    Plugin = "kubernetes: regress_backup_plugin_objects"
  }
}

Job {
  Name = "PluginK8STestProtocol3"
  JobDefs = "BackupJob"
  FileSet="TestPluginK8SSetProtocol3"
}

FileSet {
  Name = "TestPluginK8SSetProtocol3"
  Include {
    Options { signature=MD5 }
    Plugin = "kubernetes:"
    Plugin = "kubernetes: regress_backup_other_file regress_backup_external_stat"
  }
  Exclude {
    File = "/exclude/file1"
  }
}

Job {
  Name = "PluginK8STestProtocol4"
  JobDefs = "BackupJob"
  FileSet="TestPluginK8SSetProtocol4"
}

FileSet {
  Name = "TestPluginK8SSetProtocol4"
  Include {
    Options { signature=MD5 }
    Plugin = "kubernetes: regress_error_backup_stderr"
  }
}

Job {
  Name = "PluginK8STestProtocol5"
  JobDefs = "BackupJob"
  FileSet="TestPluginK8SSetProtocol5"
}

FileSet {
  Name = "TestPluginK8SSetProtocol5"
  Include {
    Options { signature=MD5 }
    Plugin = "kubernetes: regress_metadata_support"
  }
}

Job {
  Name = "PluginK8STestProtocol6"
  JobDefs = "BackupJob"
  FileSet="TestPluginK8SSetProtocol6"
}

FileSet {
  Name = "TestPluginK8SSetProtocol6"
  Include {
    Options { signature=MD5 }
    Plugin = "kubernetes: regress_standard_error_backup"
  }
}

Job {
  Name = "PluginK8STestProtocol7"
  JobDefs = "BackupJob"
  FileSet="TestPluginK8SSetProtocol7"
}

FileSet {
  Name = "TestPluginK8SSetProtocol7"
  Include {
    Options { signature=MD5 }
    Plugin = "kubernetes: regress_cancel_backup"
  }
}

FileSet {
  Name = "TestPluginKubernetesSet"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@"
  }
}
Job {
  Name = "PluginKubernetesTest"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet
}

FileSet {
  Name = "TestPluginKubernetesSet1"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest"
  }
}
Job {
  Name = "PluginKubernetesTest1"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet1
}

FileSet {
  Name = "TestPluginKubernetesSet2"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ persistentvolume=@PV1@"
  }
}
Job {
  Name = "PluginKubernetesTest2"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet2
}

FileSet {
  Name = "TestPluginKubernetesSet3"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest persistentvolume=@PV1@"
  }
}
Job {
  Name = "PluginKubernetesTest3"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet3
}

FileSet {
  Name = "TestPluginKubernetesSet4"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@"
  }
}
Job {
  Name = "PluginKubernetesTest4"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet4
}

FileSet {
  Name = "TestPluginKubernetesSet11"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=nonexistent"
  }
}
Job {
  Name = "PluginKubernetesTest11"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet11
}

FileSet {
  Name = "TestPluginKubernetesSet12"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ persistentvolume=nonexistent"
  }
}
Job {
  Name = "PluginKubernetesTest12"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet12
}

FileSet {
  Name = "TestPluginKubernetesSet13"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ persistentvolume=@PV1@ invalidoption"
  }
}
Job {
  Name = "PluginKubernetesTest13"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet13
}

FileSet {
  Name = "TestPluginKubernetesSet21"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=nonexistent abort_on_error"
  }
}
Job {
  Name = "PluginKubernetesTest21"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet21
}

FileSet {
  Name = "TestPluginKubernetesSet22"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ persistentvolume=nonexistent abort_on_error"
  }
}
Job {
  Name = "PluginKubernetesTest22"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet22
}

FileSet {
  Name = "TestPluginKubernetesSet30"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest persistentvolume=@PV_CSI1@ @BACKUP_PROXY_ARGS@"
  }
}
Job {
  Name = "PluginKubernetesTest30"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet30
}

FileSet {
  Name = "TestPluginKubernetesSet31"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=@BACKUP_ONLY_PVC@"
  }
}
Job {
  Name = "PluginKubernetesTest31"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet31
}

#
# Jobs with csi-driver to check combinations in pod annotations 
#

# 40. Check annotation:
# mode: standard
# one vol: plugintest-persistent-volume-claim-csi
FileSet {
  Name = "TestPluginKubernetesSet40"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim-csi"
  }
}
Job {
  Name = "PluginKubernetesTest40"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet40
}

# 41. Check annotation:
# mode: standard
# two vols: plugintest-persistent-volume-claim-csi,plugintest-persistent-volume-claim-csi-2
FileSet {
  Name = "TestPluginKubernetesSet41"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim-csi,plugintest-persistent-volume-claim-csi-2"
  }
}
Job {
  Name = "PluginKubernetesTest41"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet41
}

# 50. Check annotation:
# mode: snapshot
# one vol no compatible: plugintest-persistent-volume-claim
FileSet {
  Name = "TestPluginKubernetesSet50"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim"
  }
}
Job {
  Name = "PluginKubernetesTest50"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet50
}

# 51. Check annotation:
# mode: snapshot
# one vol compatible: plugintest-persistent-volume-claim-csi
FileSet {
  Name = "TestPluginKubernetesSet51"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim-csi"
  }
}
Job {
  Name = "PluginKubernetesTest51"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet51
}

# 52. Check annotation:
# mode: snapshot
# two vol compatible: plugintest-persistent-volume-claim-csi,plugintest-persistent-volume-claim-csi-2
FileSet {
  Name = "TestPluginKubernetesSet52"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim-csi,plugintest-persistent-volume-claim-csi-2"
  }
}
Job {
  Name = "PluginKubernetesTest52"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet52
}

# 53. Check annotation:
# mode: snapshot
# one vol compatible and another not: plugintest-persistent-volume-claim-csi,plugintest-persistent-volume-claim
FileSet {
  Name = "TestPluginKubernetesSet53"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim-csi,plugintest-persistent-volume-claim"
  }
}
Job {
  Name = "PluginKubernetesTest53"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet53
}

# 54. Check annotation:
# mode: snapshot
# one vol not compatible and another yes: plugintest-persistent-volume-claim,plugintest-persistent-volume-claim-csi
FileSet {
  Name = "TestPluginKubernetesSet54"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim,plugintest-persistent-volume-claim-csi"
  }
}
Job {
  Name = "PluginKubernetesTest54"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet54
}

# 60. Check annotation:
# mode: clone
# one vol compatible: plugintest-persistent-volume-claim-csi
FileSet {
  Name = "TestPluginKubernetesSet60"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim-csi"
  }
}
Job {
  Name = "PluginKubernetesTest60"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet60
}

# 61. Check annotation:
# mode: clone
# one vol no compatible: plugintest-persistent-volume-claim
FileSet {
  Name = "TestPluginKubernetesSet61"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim"
  }
}
Job {
  Name = "PluginKubernetesTest61"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet61
}

# 62. Check annotation:
# mode: clone
# two vols compatible: plugintest-persistent-volume-claim-csi,plugintest-persistent-volume-claim-csi-2
FileSet {
  Name = "TestPluginKubernetesSet62"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim-csi,plugintest-persistent-volume-claim-csi-2"
  }
}
Job {
  Name = "PluginKubernetesTest62"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet62
}

# 63. Check annotation:
# mode: clone
# one vol compatible and another not: plugintest-persistent-volume-claim-csi,plugintest-persistent-volume-claim
FileSet {
  Name = "TestPluginKubernetesSet63"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim-csi,plugintest-persistent-volume-claim"
  }
}
Job {
  Name = "PluginKubernetesTest63"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet63
}

# 64. Check annotation:
# mode: clone
# one vol not compatible and another yes: plugintest-persistent-volume-claim,plugintest-persistent-volume-claim-csi
FileSet {
  Name = "TestPluginKubernetesSet64"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim,plugintest-persistent-volume-claim-csi"
  }
}
Job {
  Name = "PluginKubernetesTest64"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet64
}

# 70. Check pvcdata:
# one vol (standard): plugintest-persistent-volume-claim
FileSet {
  Name = "TestPluginKubernetesSet70"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim"
  }
}
Job {
  Name = "PluginKubernetesTest70"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet70
}

# 71. Check pvcdata:
# two vols (standard): plugintest-persistent-volume-claim,plugintest3-persistent-volume-claim
FileSet {
  Name = "TestPluginKubernetesSet71"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@=plugintest-persistent-volume-claim,plugintest3-persistent-volume-claim"
  }
}
Job {
  Name = "PluginKubernetesTest71"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet71
}

# 72. Check pvcdata:
# any vol (all vols will be backed)
FileSet {
  Name = "TestPluginKubernetesSet72"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@"
  }
}
Job {
  Name = "PluginKubernetesTest72"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet72
}

# 73. Check pvcdata:
# any vol, one pod with annotation standard
FileSet {
  Name = "TestPluginKubernetesSet73"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@"
  }
}
Job {
  Name = "PluginKubernetesTest73"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet73
}

# 74. Check pvcdata:
# any vol, one pod with annotation clone
FileSet {
  Name = "TestPluginKubernetesSet74"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@"
  }
}
Job {
  Name = "PluginKubernetesTest74"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet74
}

# 75. Check pvcdata:
# any vol, one pod with annotation snapshot
FileSet {
  Name = "TestPluginKubernetesSet75"
  Include { Options { signature=SHA1 }
    Plugin = "@LPLUG@ namespace=plugintest @BACKUP_PROXY_ARGS@"
  }
}
Job {
  Name = "PluginKubernetesTest75"
  JobDefs = Default
  FileSet = TestPluginKubernetesSet75
}

# List of files to be backed up
FileSet {
  Name = "Full Set"
  Include { Options { signature=SHA1 }
    File =<@tmpdir@/file-list
  }
}

# Client (File Services) to backup
Client {
  Name = @hostname@-fd
  Address = @hostname@
  FDPort = @fdport@
  Catalog = MyCatalog
  Password = "xevrjURYoCHhn26RaJoWbeWXEY/a3VqGKp/37tgWiuHc"          # password for FileDaemon
  File Retention = 30d                # 30 days
  Job Retention = 180d                # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

# Definiton of file storage device
Storage {
  Name = File
  Address = @hostname@                # N.B. Use a fully qualified name here
  SDPort = @sdport@
  Password = "ccV3lVTsQRsdIUGyab0N4sMDavui2hOBkmpBU0aQKOr9"
  Device = FileStorage
  Media Type = File
}

# Definiton of file storage device
Storage {
  Name = File1
  Address = @hostname@                # N.B. Use a fully qualified name here
  SDPort = @sdport@
  Password = "ccV3lVTsQRsdIUGyab0N4sMDavui2hOBkmpBU0aQKOr9"
  Device = FileStorage1
  Media Type = File1
}

# Standard Restore template, to be changed by Console program
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=@hostname@-fd
  FileSet="Full Set"
  Storage = File1
  Messages = Standard
  Pool = Default
  Where = @tmpdir@/bacula-restores
  Max Run Time = 30min
}

# Generic catalog service
Catalog {
  Name = MyCatalog
  @libdbi@
  dbname = @db_name@; user = @db_user@; password = "@db_password@"
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
  mailcommand = "@sbindir@/bsmtp -h localhost -f \"\(Bacula regression\) %r\" -s \"Regression: %t %e of %c %l\" %r"
  operatorcommand = "@sbindir@/bsmtp -h localhost -f \"\(Bacula regression\) %r\" -s \"Regression: Intervention needed for %j\" %r"
# MailOnError = @job_email@ = all, !terminate
# operator = @job_email@ = mount
  console = all

  append = "@working_dir@/log" = all, !skipped
  catalog = all, !skipped
}

Messages {
  Name = NoEmail
  mailcommand = "@sbindir@/bsmtp -h localhost -f \"\(Bacula regression\) %r\" -s \"Regression: %t %e of %c %l\" %r"
  console = all, !skipped, !terminate, !restored
  append = "@working_dir@/log" = all, !skipped
  catalog = all, !skipped
}


# Default pool definition
Pool {
  Name = Default
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365d             # one year
}
