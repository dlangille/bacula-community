#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 1.39 or later
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#

Director {                            # define myself
  Name = @hostname@-dir
  DIRPort = @dirport@                # where we listen for UA connections
  QueryFile = "@scriptdir@/query.sql"
  WorkingDirectory = "@working_dir@"
  PidDirectory = "@piddir@"
  SubSysDirectory = "@subsysdir@"
  PluginDirectory = "@sbindir@/plugins"
  Maximum Concurrent Jobs = 4
  Password = "pNvX1WiXnwv2C/F7E52LGvw6rKjbbPvu2kyuPa9pVaL3"         # Console password
  Messages = Standard
}

Job {
  Name = "PluginRHEVTest"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet"
}

JobDefs {
  Name = "BackupJob"
  Type = Backup
  Pool = Default
  Storage = File
  Messages = Standard
  Priority = 10
  Client=@hostname@-fd
  Write Bootstrap = "@working_dir@/%n-%f.bsr"
}

# Standard Restore template, to be changed by Console program
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=@hostname@-fd
  FileSet="Full Set"
  Storage = File
  Messages = Standard
  Pool = Default
  Where = @tmpdir@/bacula-restores
}


# List of files to be backed up
FileSet {
  Name = "Full Set"
  Include {
     Options { signature=MD5; sparse=yes }
     File = /tmp
  }
}

FileSet {
  Name = "TestPluginRHEVSet"
  Include {
    Options {
      signature=MD5
    }
    Plugin = "rhv: User=test:tester Password=testing server=http://127.0.0.1:8080/auth/v1.0 abort_on_error vm_name=container1"
    Plugin = "rhv: User=eric:isthebest Password=hello server=http://127.0.0.1:8080/auth/v1.0 abort_on_error vm_name=container2"
  }
}

Job {
  Name = "PluginRHEVTestProtocol1"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSetProtocol1"
}

FileSet {
  Name = "TestPluginRHEVSetProtocol1"
  Include {
    Options { signature=MD5 }
    Plugin = "rhv:"
  }
}

Job {
  Name = "PluginRHEVTestProtocol2"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSetProtocol2"
}

FileSet {
  Name = "TestPluginRHEVSetProtocol2"
  Include {
    Options { signature=MD5 }
    Plugin = "rhv: regress_backup_plugin_objects"
  }
}

Job {
  Name = "PluginRHEVTestProtocol3"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSetProtocol3"
}

FileSet {
  Name = "TestPluginRHEVSetProtocol3"
  Include {
    Options { signature=MD5 }
    Plugin = "rhv:"
    Plugin = "rhv: regress_backup_other_file"
  }
  Exclude {
    File = "/exclude/file1"
  }
}

Job {
  Name = "PluginRHEVTestProtocol4"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSetProtocol4"
}

FileSet {
  Name = "TestPluginRHEVSetProtocol4"
  Include {
    Options { signature=MD5 }
    Plugin = "rhv: regress_error_backup_stderr"
  }
}

Job {
  Name = "PluginRHEVTestProtocol5"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSetProtocol5"
}

FileSet {
  Name = "TestPluginRHEVSetProtocol5"
  Include {
    Options { signature=MD5 }
    Plugin = "rhv: regress_metadata_support"
  }
}

Job {
  Name = "PluginRHEVTestProtocol6"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSetProtocol6"
}

FileSet {
  Name = "TestPluginRHEVSetProtocol6"
  Include {
    Options { signature=MD5 }
    Plugin = "rhv: regress_standard_error_backup"
  }
}

Job {
  Name = "PluginRHEVTestProtocol7"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSetProtocol7"
}

FileSet {
  Name = "TestPluginRHEVSetProtocol7"
  Include {
    Options { signature=MD5 }
    Plugin = "rhv: regress_cancel_backup"
  }
}

Job {
  Name = "PluginRHEVTest1"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet1"
}

FileSet {
  Name = "TestPluginRHEVSet1"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ output debug"
  }
}

Job {
  Name = "PluginRHEVTest2"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet2"
}

FileSet {
  Name = "TestPluginRHEVSet2"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ include=container1/* output debug"
  }
}

Job {
  Name = "PluginRHEVTest3"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet3"
}

FileSet {
  Name = "TestPluginRHEVSet3"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ include=container2/bin/bash output debug"
  }
}

Job {
  Name = "PluginRHEVTest4"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet4"
}

FileSet {
  Name = "TestPluginRHEVSet4"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ exclude=container2/* output debug"
  }
}

Job {
  Name = "PluginRHEVTest5"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet5"
}

FileSet {
  Name = "TestPluginRHEVSet5"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ vm_name=container1 vm_name=container1 output debug"
  }
}

Job {
  Name = "PluginRHEVTest6"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet6"
}

FileSet {
  Name = "TestPluginRHEVSet6"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ vm_name=container1 output debug"
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ vm_name=container3 output debug"
  }
}

Job {
  Name = "PluginRHEVTest7"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet7"
}

FileSet {
  Name = "TestPluginRHEVSet7"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ vm_name=container2 output debug"
  }
}

Job {
  Name = "PluginRHEVTest8"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet8"
}

FileSet {
  Name = "TestPluginRHEVSet8"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ vm_name=container1 output debug"
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ vm_name=container2 output debug"
  }
}

Job {
  Name = "PluginRHEVTest9"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet9"
}

FileSet {
  Name = "TestPluginRHEVSet9"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ vm_name=container11 output debug"
  }
}

Job {
  Name = "PluginRHEVTest10"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet10"
}

FileSet {
  Name = "TestPluginRHEVSet10"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ vm_name=container1 output debug"
  }
}

Job {
  Name = "PluginRHEVTest11"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet11"
}

FileSet {
  Name = "TestPluginRHEVSet11"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ exclude=container11 output debug"
  }
}

Job {
  Name = "PluginRHEVTest12"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet12"
}

FileSet {
  Name = "TestPluginRHEVSet12"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=OTHER password=NOTSET server=@st_auth@ debug output abort_on_error"
  }
}

Job {
  Name = "PluginRHEVTest13"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet13"
}

FileSet {
  Name = "TestPluginRHEVSet13"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=OTHER password=NOTSET server=192.168.0.80 debug abort_on_error"
  }
}

Job {
  Name = "PluginRHEVTest14"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet14"
}

FileSet {
  Name = "TestPluginRHEVSet14"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ server=@st_auth@ debug abort_on_error"
  }
}

Job {
  Name = "PluginRHEVTest15"
  JobDefs = "BackupJob"
  FileSet="TestPluginRHEVSet15"
}

FileSet {
  Name = "TestPluginRHEVSet15"
  Include {
    Options {
      signature=MD5
      compression=GZIP9
    }
    Plugin = "rhv: user=@st_user@ password=@st_key@ server=@st_auth@ include=container11/* abort_on_error output debug"
  }
}

#
# When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days
Schedule {
  Name = "WeeklyCycle"
  Run = Level=Full 1st sun at 1:05
  Run = Level=Differential 2nd-5th sun at 1:05
  Run = Level=Incremental mon-sat at 1:05
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Level=Full sun-sat at 1:10
}

# Client (File Services) to backup
Client {
  Name = @hostname@-fd
  Address = @hostname@
  FDPort = @fdport@
  Catalog = MyCatalog
  Password = "xevrjURYoCHhn26RaJoWbeWXEY/a3VqGKp/37tgWiuHc"          # password for FileDaemon
  File Retention = 30d                # 30 days
  Job Retention = 180d                # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
  Maximum Concurrent Jobs = 4
}

# Definiton of file storage device
Storage {
  Name = File
  Address = @hostname@                # N.B. Use a fully qualified name here
  SDPort = @sdport@
  Password = "ccV3lVTsQRsdIUGyab0N4sMDavui2hOBkmpBU0aQKOr9"
  Device = FileStorage
  Media Type = File
  Maximum Concurrent Jobs = 4
}

Storage {
  Name = File1
  Address = @hostname@                # N.B. Use a fully qualified name here
  SDPort = @sdport@
  Password = "ccV3lVTsQRsdIUGyab0N4sMDavui2hOBkmpBU0aQKOr9"
  Device = FileStorage1
  Media Type = File1
  Maximum Concurrent Jobs = 4
}

# Generic catalog service
Catalog {
  Name = MyCatalog
  @libdbi@
  dbname = @db_name@; user = @db_user@; password = "@db_password@"
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
  mailcommand = "@sbindir@/bsmtp -h localhost -f \"\(Bacula regression\) %r\" -s \"Regression: %t %e of %c %l\" %r"
  operatorcommand = "@sbindir@/bsmtp -h localhost -f \"\(Bacula regression\) %r\" -s \"Regression: Intervention needed for %j\" %r"
# MailOnError = @job_email@ = all, !terminate
# operator = @job_email@ = mount
  console = all

  append = "@working_dir@/log" = all, !skipped
  catalog = all, !skipped
}

Messages {
  Name = NoEmail
  mailcommand = "@sbindir@/bsmtp -h localhost -f \"\(Bacula regression\) %r\" -s \"Regression: %t %e of %c %l\" %r"
  console = all, !skipped, !terminate
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if the scroll off the console.
#
  append = "@working_dir@/log" = all, !skipped
  catalog = all, !skipped
}


# Default pool definition
Pool {
  Name = Default
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365d             # one year
# Label Format = "TEST-${Year}-${Month:p/2/0/r}-${Day:p/2/0/r}:${NumVols}"
# Maximum Volume Jobs = 1
}
