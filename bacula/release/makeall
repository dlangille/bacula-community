#!/bin/sh
#
# Make full release
#
# Bacula git repos
bacula=${bacula:-${HOME}/bacula/k/bacula}
docs=${docs:-${HOME}/bacula/k/docs}
rescue=${rescue:-${HOME}/bacula/k/rescue}
#
# Set the following to your remote name.  By default it is origin.
remote=bs

export push=yes
#
# Note, you will probably want to set updatepo=no if you
#   run this script multiple times for a given release.
export updatepo=no

if [ $# != 1 ] ; then
  echo "Need $0 <Branch-to-release>"
  echo "e.g. $0 Branch-5.0"
  exit 1
fi

branch=$1

cwd=`pwd`

# We pull the version $ver from the main bacula source directory
cd $bacula
current=`git branch | awk '/*/ { print $2 }'`
cd bacula
if [ $?  -ne 0 ]; then
   echo "Directory: $1 does not exist"
   exit 1
fi
git checkout ${branch}
git pull ${remote} ${branch}
if [ $? -ne 0 ]; then
   echo "Checkout of branch ${branch} failed."
   exit 1
fi
ver=`sed -n -e 's/^.*VERSION.*"\(.*\)"$/\1/p' src/version.h`
git checkout ${current}
cd $cwd


# ./makeclean
./makebacularel $bacula $remote $branch $ver
./makedocsrel $bacula $docs $remote $branch $ver
./makerescuerel $rescue $remote $branch $ver
./makewinrel $bacula $remote $branch $ver | tee win$$.log

# strip ./configure strerror from Win log file
sed -i -e 's%strerror%%' win$$.log
# check for warning and error messages
grep -i warning win$$.log >/dev/null
if [ $? -eq 0 ] ; then
  echo " "
  echo "Warnings in win$$.log"
  exit 1
fi
grep -i error win$$.log >/dev/null
if [ $? -eq 0 ] ; then
  echo " "
  echo "Errors in win$$.log"
  exit 1
fi
rm -f win$$.log
