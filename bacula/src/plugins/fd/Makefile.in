#
# Simple Makefile for building test FD plugins for Bacula
#
# Copyright (C) 2000-2020 Kern Sibbald
# License: BSD 2-Clause; see file LICENSE-FOSS
#
#
@MCOMMON@


# No optimization for now for easy debugging

FDDIR=../../filed
SRCDIR=../..
LIBDIR=../../lib
PLUGINLIBDIR=./pluginlib
SYBASE_TMPDIR=@sybase_tmpdir@
SYBASE_CONFIG=@sysconfdir@/sbt.conf
ORACLE_TMPDIR=@oracle_tmpdir@
SAP_TMPDIR=@sap_tmpdir@
RMAN_SCRIPT_DIR=@sysconfdir@
RSYNC_INC=@RSYNC_INC@
RSYNC_LIBS=@RSYNC_LIBS@

PLUGINLIBOBJ=$(PLUGINLIBDIR)/pluginlib.lo $(PLUGINLIBDIR)/ptcomm.lo $(PLUGINLIBDIR)/metaplugin.lo

LDAPSRC = ldap-fd.c ldap-util.c
MSADSRC = msad-fd.c msad-util.c
COMMONSRC = ldaputils.c ldap-mod-util.c parseconfig.c utils.c keylist.c ldaplist.c
LDAPTESTSRC = ldaptest.c
LDAPOBJ = $(LDAPSRC:.c=.lo) $(PLUGINLIBOBJ)
MSADOBJ = $(MSADSRC:.c=.lo) $(PLUGINLIBOBJ)
COMMONOBJ = $(COMMONSRC:.c=.lo)
LDAPTESTOBJ = $(LDAPTESTSRC:.c=.lo)

# TODO: check with configure
LDAP_LIBS = -lldap -llber

SWIFTSRC = swift-fd.c swift-fd.h
TESTSWIFTSRC = test_swift_backend.c
SWIFTOBJ = $(SWIFTSRC:.c=.lo) $(PLUGINLIBOBJ)
TESTSWIFTOBJ = $(TESTSWIFTSRC:.c=.lo)

DOCKERSRC = dkcommctx.c dkcommctx.h dkid.c dkid.h dkinfo.c dkinfo.h docker-fd.c docker-fd.h
DOCKEROBJ = $(DOCKERSRC:.c=.lo) $(PLUGINLIBDIR)/pluginlib.lo

KUBESRC = kubernetes-fd.c kubernetes-fd.h
TESTKUBESRC = test_kubernetes_backend.c
KUBEOBJ = $(KUBESRC:.c=.lo) $(PLUGINLIBOBJ)
TESTKUBEOBJ = $(TESTKUBESRC:.c=.lo)

OPENSHIFTSRC = openshift-fd.c openshift-fd.h
OPENSHIFTOBJ = $(OPENSHIFTSRC:.c=.lo) $(PLUGINLIBOBJ)
OPENSHIFTDEPS = kubernetes-fd.c kubernetes-fd.h

DB2SRC = db2-fd.c db2_parser.h db2_parser.c
DB2OBJ = $(DB2SRC:.c=.lo)

PROXMOXSRC = proxmox-fd.c proxmox-fd.h
PROXMOXOBJ = $(PROXMOXSRC:.c=.lo) $(PLUGINLIBOBJ)

HDFSSRC = hdfs-fd.c hdfs-fd.h
HDFSOBJ = $(HDFSSRC:.c=.lo) $(PLUGINLIBOBJ)

.SUFFIXES:    .c .lo

.c.lo:
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) -I${SRCDIR} -I${FDDIR} -I${LIBDIR} -I. -c $<

all: bpipe-fd.la

test-plugins: test-plugin-fd.la test-deltaseq-fd.la test-handlexacl-plugin-fd.la

$(PLUGINLIBDIR)/pluginlib.lo: $(PLUGINLIBDIR)/pluginlib.cpp $(PLUGINLIBDIR)/pluginlib.h
	$(MAKE) -C $(PLUGINLIBDIR) pluginlib.lo

$(PLUGINLIBDIR)/metaplugin.lo: $(PLUGINLIBDIR)/metaplugin.cpp $(PLUGINLIBDIR)/metaplugin.h
	$(MAKE) -C $(PLUGINLIBDIR) metaplugin.lo

$(PLUGINLIBDIR)/test_metaplugin_backend.lo: $(PLUGINLIBDIR)/test_metaplugin_backend.c
	$(MAKE) -C $(PLUGINLIBDIR) test_metaplugin_backend.lo


$(LIBDIR)/unittests.lo:
	$(MAKE) -C $(LIBDIR) unittests.lo

$(PLUGINLIBDIR)/ptcomm.lo: $(PLUGINLIBDIR)/ptcomm.cpp $(PLUGINLIBDIR)/ptcomm.h
	$(MAKE) -C $(PLUGINLIBDIR) ptcomm.lo


test_kubernetes_backend.lo: $(TESTKUBESRC)
	@echo "Compiling $< ..."
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I${SRCDIR} -I${FDDIR} -DLOGDIR=\"$(DESTDIR)$(working_dir)\" -c $<

kubernetes-fd.la: Makefile $(KUBEOBJ)
	@echo "Linking $(@:.la=.so) ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) -shared $(KUBEOBJ) -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

install-kubernetes: kubernetes-fd.la
	$(MKDIR) $(DESTDIR)$(plugindir)
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) kubernetes-fd.la $(DESTDIR)$(plugindir)
	$(NO_ECHO)$(RMF) $(DESTDIR)$(plugindir)/kubernetes-fd.la

install-test-kubernetes: test_kubernetes_backend kubernetes-fd.la
	$(MKDIR) $(DESTDIR)$(plugindir)
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) kubernetes-fd.la $(DESTDIR)$(plugindir)
	$(NO_ECHO)$(RMF) $(DESTDIR)$(plugindir)/kubernetes-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) test_kubernetes_backend $(DESTDIR)$(sbindir)/k8s_backend

openshift-fd.la: Makefile $(OPENSHIFTOBJ) $(OPENSHIFTDEPS)
	@echo "Linking $(@:.la=.so) ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) -shared $(OPENSHIFTOBJ) -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

install-openshift: openshift-fd.la
	$(MKDIR) $(DESTDIR)$(plugindir)
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) openshift-fd.la $(DESTDIR)$(plugindir)
	$(NO_ECHO)$(RMF) $(DESTDIR)$(plugindir)/openshift-fd.la

hdfs-fd.la: Makefile $(HDFSOBJ)
	@echo "Linking $(@:.la=.so) ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) -shared $(HDFSOBJ) -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

install-hdfs: hdfs-fd.la
	$(MKDIR) $(DESTDIR)$(plugindir)
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) hdfs-fd.la $(DESTDIR)$(plugindir)
	$(NO_ECHO)$(RMF) $(DESTDIR)$(plugindir)/hdfs-fd.la

db2: db2-fd.la

db2-fd.la: Makefile $(DB2SRC) $(DB2OBJ)
	@echo "Linking $(@:.la=.so) ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) -shared $(DB2OBJ) -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

db2_parser_test: db2_parser.c db2_parser.h ../../lib/unittests.o
	$(RMF) db2_parser.o
	$(CXX) -DTEST_PROGRAM $(DEFS) $(DEBUG) -c $(CPPFLAGS) -I../..  $(DINCLUDE) $(CFLAGS) db2_parser.c
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L. -o $@ db2_parser.o ../../lib/unittests.o $(DLIB) -lbac -lm $(LIBS) $(OPENSSL_LIBS) -L../../lib
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) $@ $(DESTDIR)$(sbindir)/
	$(RMF) db2_parser.o

docker: docker-fd.la

docker-fd.la: Makefile $(DOCKERSRC) $(DOCKEROBJ)
	@echo "Linking $(@:.la=.so) ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) -shared $(DOCKEROBJ) -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

proxmox: proxmox-fd.la

proxmox-fd.la: Makefile $(PROXMOXOBJ)
	@echo "Linking $(@:.la=.so) ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) -shared $(PROXMOXOBJ) -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

swift: swift-fd.la

swift-fd.la: $(SWIFTOBJ)
	@echo "Linking $(@:.la=.so) ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) -shared $(SWIFTOBJ) -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

test_swift_backend: Makefile $(TESTSWIFTOBJ)
	@echo "Building $@ ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) test_swift_backend.lo -o $@

rot13: rot13-fd.la

postgresql: postgresql-fd.la

mysql: mysql-fd.la

sap: sap-fd.la

sybase:  sybase-sbt-fd.la libsybacula.so

sybase-sbt: sybase-sbt-fd.la

libsybacula.so: namedpipe.c namedpipe.h libsybacula.c libsybacula.h sbt-common.c sbt-common.h libbacula.h libbacula.c
	@echo "Building $@ ..."
	$(CC) -m64 -fPIC -Wall -g -O2 -fno-strict-aliasing -fno-exceptions -Wno-unused-function -o libsybacula.so -shared -I. libsybacula.c -DDEFAULT_BACULA_CONFIG='"$(SYBASE_CONFIG)"'

sybase-sbt-fd.lo: sybase-sbt-fd.c sybase-sbt-fd.h namedpipe.c namedpipe.h sbt-common.c sbt-common.h sbtctx.h ${FDDIR}/fd_plugins.h
	@echo "Compiling $< ..."
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -Wno-unused-function -I${SRCDIR} -I${FDDIR} -c sybase-sbt-fd.c

sybase-sbt-fd.la: Makefile sybase-sbt-fd$(DEFAULT_OBJECT_TYPE) 
	@echo "Linking $(@:.la=.so) ..."
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared sybase-sbt-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

test_libsybacula: Makefile test_libsybacula.lo
	@echo "Building $@ ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) $(DEBUG) $(LIBS) test_libsybacula.lo -o $@

install-sybase: libsybacula.so sybase-sbt-fd.la 
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) sybase-sbt-fd.la $(DESTDIR)$(plugindir)
	$(NO_ECHO)$(RMF) $(DESTDIR)$(plugindir)/sybase-sbt-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM_ALL) libsybacula.so $(DESTDIR)$(libdir)

install-sybase-test-plugin: test_libsybacula install-sybase
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) test_libsybacula $(DESTDIR)$(sbindir)

oracle: oracle-fd.la

oracle-sbt: oracle-sbt-fd.la

libobk.so: namedpipe.c libobk.c sbt-common.c libbacula.h libbacula.c sbt-common.h
	$(CC) $(CFLAGS) -Wno-unused-function -o libobk.so -fPIC -shared -I. -DORA_BSP libobk.c -DDEFAULT_BACULA_CONFIG='"$(DESTDIR)$(sysconfdir)/sbt.conf"'

stksbt: stksbt.c libobk.so
	$(CC) $(CFLAGS) $(LDFLAGS) -o stksbt -g -ldl -I. stksbt.c

stksbt2: stksbt2.c libobk.so
	$(CC) $(CFLAGS) $(LDFLAGS) -o stksbt2 -g -ldl -I. stksbt2.c

install-libobk: libobk.so stksbt stksbt2
	$(INSTALL_PROGRAM) libobk.so $(DESTDIR)$(sbindir)
	$(INSTALL_PROGRAM) stksbt $(DESTDIR)$(sbindir)
	$(INSTALL_PROGRAM) stksbt2 $(DESTDIR)$(sbindir)

netapp-hfc: netapp-hfc-fd.la

kvm: kvm-fd.la
all: bpipe-fd.la test-plugin-fd.la test-deltaseq-fd.la

example-plugin-fd.lo: example-plugin-fd.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c example-plugin-fd.c

example-plugin-fd.la: Makefile example-plugin-fd$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared example-plugin-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

bpipe-fd.lo: bpipe-fd.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c bpipe-fd.c

bpipe-fd.la: Makefile bpipe-fd$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared bpipe-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

test-bpipe-fd.c: bpipe-fd.c
	cp -f bpipe-fd.c test-bpipe-fd.c

test-bpipe-fd.lo: test-bpipe-fd.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -DTEST_BPIPE_OFFSET -I../.. -I${FDDIR} -c test-bpipe-fd.c

test-bpipe-fd.la: Makefile test-bpipe-fd$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared test-bpipe-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

rot13-fd.lo: rot13-fd.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c rot13-fd.c

rot13-fd.la: Makefile rot13-fd$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared rot13-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

postgresql-fd.lo: postgresql-fd.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c postgresql-fd.c

postgresql-fd.la: Makefile postgresql-fd$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared postgresql-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

mysql-fd.lo: mysql-fd.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c mysql-fd.c

mysql-fd.la: Makefile mysql-fd$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared mysql-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

hvplugin.lo: hvplugin.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c hvplugin.c 

kvm-fd.la: Makefile hvplugin$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared hvplugin.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

namedpipe.lo: namedpipe.c namedpipe.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -c namedpipe.c

sap-fd.lo: sap-fd.c backint.h namedpipe.h namedpipe.c  sbt-common.c sbt-common.h sbtctx.h  ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -Wno-unused-function -DSAP_TMP_DIR='"${SAP_TMPDIR}"' -I../.. -I${FDDIR} -c sap-fd.c

sap-fd.la: Makefile sap-fd$(DEFAULT_OBJECT_TYPE) 
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared sap-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

backint.lo: Makefile backint.c backint.h namedpipe.h sbt-common.c sbt-common.h sbtctx.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -Wno-unused-function -I../.. -I${FDDIR} -c backint.c

backint: Makefile backint.lo namedpipe.lo ../../lib/libbac$(DEFAULT_ARCHIVE_TYPE) ../../lib/ini$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L../../lib -L../../findlib -o $@ backint.lo namedpipe.lo  ../../lib/ini$(DEFAULT_OBJECT_TYPE) -lbac -lbacfind -lm \
		$(DLIB) $(LIBS) $(GETTEXT_LIBS)

hdbbackint.lo: Makefile backint.c backint.h namedpipe.h sbt-common.c sbt-common.h sbtctx.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -DBACKEND_HANA -Wno-unused-function -I../.. -I${FDDIR} -c backint.c -o $@

hdbbackint: Makefile hdbbackint.lo namedpipe.lo ../../lib/libbac$(DEFAULT_ARCHIVE_TYPE) ../../lib/ini$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L../../lib -L../../findlib -o $@ hdbbackint.lo namedpipe.lo  ../../lib/ini$(DEFAULT_OBJECT_TYPE) -lbac -lbacfind -lm \
		$(DLIB) $(LIBS) $(GETTEXT_LIBS)

oracle-fd.lo: oracle-fd.c namedpipe.c namedpipe.h sbt-common.c sbt-common.h sbtctx.h ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -Wno-unused-function -DORA_TMP_DIR='"${ORACLE_TMPDIR}"' -DRMAN_SCRIPT_DIR='"${RMAN_SCRIPT_DIR}"' -I../.. -I${FDDIR} -c oracle-fd.c

oracle-fd.la: Makefile oracle-fd$(DEFAULT_OBJECT_TYPE) 
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared oracle-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

oracle-sbt-fd.lo: oracle-sbt-fd.c namedpipe.c namedpipe.h sbt-common.c sbt-common.h sbtctx.h  ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -Wno-unused-function -DORA_TMP_DIR='"${ORACLE_TMPDIR}"' -DRMAN_SCRIPT_DIR='"${RMAN_SCRIPT_DIR}"' -I../.. -I${FDDIR} -c oracle-sbt-fd.c

oracle-sbt-fd.la: Makefile oracle-sbt-fd$(DEFAULT_OBJECT_TYPE) 
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared oracle-sbt-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

cdp: cdp-fd.la

cdp-fd.lo: cdp-fd.c journal.h folder-record.h file-record.h settings-record.h ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -Wno-unused-function -I../.. -I${FDDIR} -c cdp-fd.c

journal.lo: journal.c journal.h folder-record.h file-record.h settings-record.h ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -Wno-unused-function -I../.. -I${FDDIR} -c journal.c

cdp-fd.la: Makefile cdp-fd$(DEFAULT_OBJECT_TYPE) journal.lo
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared cdp-fd.lo journal.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

xml.lo: ../../lib/xml.c ../../lib/xml.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c ../../lib/xml.c

netapp-hfc-fd.lo: netapp-hfc-fd.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c netapp-hfc-fd.c

netapp-hfc-fd.la: Makefile netapp-hfc-fd$(DEFAULT_OBJECT_TYPE) xml.lo
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared netapp-hfc-fd.lo xml.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

test-deltaseq-fd.lo: test-deltaseq-fd.c ${FDDIR}/fd_plugins.h fd_common.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c test-deltaseq-fd.c

test-deltaseq-fd.la: Makefile test-deltaseq-fd$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared test-deltaseq-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

delta-fd.lo: delta-fd.c ${FDDIR}/fd_plugins.h fd_common.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(RSYNC_INC) $(CFLAGS) -I../.. -I${FDDIR} -c delta-fd.c

delta-fd.la: Makefile delta-fd$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) $(RSYNC_LIBS) -shared delta-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

vmdk_scanner.lo: vmdk_scanner.c vmdk_scanner.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c vmdk_scanner.c

vmdk_scanner_test: vmdk_scanner.c ../../lib/unittests.o
	$(RMF) vmdk_scanner.o
	$(CXX) -DTEST_PROGRAM $(DEFS) $(DEBUG) -c $(CPPFLAGS) -I../..  -I../../filed $(DINCLUDE) $(CFLAGS) vmdk_scanner.c
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L. -o $@ vmdk_scanner.o ../../lib/unittests.o $(DLIB) -lbac -lm $(LIBS) $(OPENSSL_LIBS) -L../../lib
	$(RMF) vmdk_scanner.o

bvmdk_generator: vmdk_scanner.c ../../lib/unittests.o
	$(RMF) vmdk_scanner.o
	$(CXX) -DTEST_GENERATOR $(DEFS) $(DEBUG) -c $(CPPFLAGS) -I../..  -I../../filed $(DINCLUDE) $(CFLAGS) vmdk_scanner.c
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L. -o $@ vmdk_scanner.o ../../lib/unittests.o $(DLIB) -lbac -lm $(LIBS) $(OPENSSL_LIBS) -L../../lib
	$(RMF) vmdk_scanner.o

vsphere-fd.lo: vsphere-fd.c ${FDDIR}/fd_plugins.h fd_common.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c vsphere-fd.c

vsphere-fd.la: Makefile vsphere-fd$(DEFAULT_OBJECT_TYPE) vmdk_scanner$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared vmdk_scanner.lo vsphere-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

test-plugin-fd.lo: test-plugin-fd.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c test-plugin-fd.c

test-plugin-fd.la: Makefile test-plugin-fd$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared test-plugin-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version

datagen.lo: datagen.c
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c datagen.c

test-dedup-fd.lo: test-dedup-fd.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c test-dedup-fd.c

test-dedup-fd.la: Makefile test-dedup-fd$(DEFAULT_OBJECT_TYPE) datagen.lo
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared test-dedup-fd.lo datagen.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

ndmp-fd.lo: ndmp-fd.c ${FDDIR}/fd_plugins.h fd_common.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c ndmp-fd.c

ndmp-config-scanner.lo: ndmp-config-scanner.c
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c ndmp-config-scanner.c

ndmp-smtape.lo: ndmp-smtape.c
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c ndmp-smtape.c

ndmp_smtape_test: ndmp-smtape.c ../../lib/unittests.o
	$(RMF) ndmp-smtape.o
	$(CXX) -DTEST_PROGRAM $(DEFS) $(DEBUG) -c $(CPPFLAGS) -I../..  $(DINCLUDE) $(CFLAGS) ndmp-smtape.c
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L. -o $@ ndmp-smtape.o ../../lib/unittests.o $(DLIB) -L../../findlib -lbac -lbacfind -lm $(LIBS) $(OPENSSL_LIBS) -L../../lib
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) $@ $(DESTDIR)$(sbindir)/
	$(RMF) ndmp-smtape.o

ndmp-dump-scanner.lo: ndmp-dump-scanner.c
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c ndmp-dump-scanner.c

ndmp_dump_scanner_test: ndmp-dump-scanner.c ../../lib/unittests.o
	$(RMF) ndmp-dump-scanner.o
	$(CXX) -DTEST_PROGRAM $(DEFS) $(DEBUG) -c $(CPPFLAGS) -I../..  $(DINCLUDE) $(CFLAGS) ndmp-dump-scanner.c
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L. -o $@ ndmp-dump-scanner.o ../../lib/unittests.o $(DLIB) -lbac -lm $(LIBS) $(OPENSSL_LIBS) -L../../lib
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) $@ $(DESTDIR)$(sbindir)/
	$(RMF) ndmp-dump-scanner.o

ndmp-fd.la: Makefile ndmp-fd$(DEFAULT_OBJECT_TYPE) ndmp-config-scanner$(DEFAULT_OBJECT_TYPE) ndmp-dump-scanner$(DEFAULT_OBJECT_TYPE) ndmp-smtape$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared ndmp-dump-scanner.lo ndmp-config-scanner.lo ndmp-smtape.lo ndmp-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

ndmp_config_scanner_test: ndmp-config-scanner.c ../../lib/unittests.o
	$(RMF) ndmp-config-scanner.o
	$(CXX) -DTEST_PROGRAM $(DEFS) $(DEBUG) -c $(CPPFLAGS) -I../..  $(DINCLUDE) $(CFLAGS) ndmp-config-scanner.c
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L. -o $@ ndmp-config-scanner.o ../../lib/unittests.o $(DLIB) -lbac -lm $(LIBS) $(OPENSSL_LIBS) -L../../lib
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) $@ $(DESTDIR)$(sbindir)/
	$(RMF) ndmp-config-scanner.o

ndmp_idx_dump: ndmp_idx_dump.c
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) -c $(CPPFLAGS) -I../..  $(DINCLUDE) $(CFLAGS) ndmp_idx_dump.c
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L. -o $@ ndmp_idx_dump.lo $(DLIB) -lbac -lm $(LIBS) $(OPENSSL_LIBS) -L../../lib

ldap: ldap-fd.la

ldap-fd.la: Makefile $(LDAPOBJ) $(COMMONOBJ)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared $(LDAPOBJ) $(COMMONOBJ) -o $@ -rpath $(plugindir) -module \
		-export-dynamic -avoid-version $(LDAP_LIBS)

ldaptest: $(LDAPTESTOBJ) Makefile
	@echo "Building ldaptest ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) $(LDAP_LDFLAGS) $(LDAP_LIBS) ldaptest.lo -o $@

msad: msad-fd.la

msad-fd.la: Makefile $(MSADOBJ) $(COMMONOBJ)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared $(MSADOBJ) $(COMMONOBJ) -o $@ -rpath $(plugindir) -module \
		-export-dynamic -avoid-version $(LDAP_LIBS)

install-ldap:
	$(MAKE) -C ldap install-ldap 

install-msad:
	$(MAKE) -C ldap install-msad

test-handlexacl-plugin-fd.lo: test-handlexacl-plugin-fd.c ${FDDIR}/fd_plugins.h
	$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CPPFLAGS) $(CFLAGS) -I../.. -I${FDDIR} -c test-handlexacl-plugin-fd.c

test-handlexacl-plugin-fd.la: Makefile test-handlexacl-plugin-fd$(DEFAULT_OBJECT_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -shared test-handlexacl-plugin-fd.lo -o $@ -rpath $(plugindir) -module -export-dynamic -avoid-version 

test_kubernetes_backend: Makefile $(TESTKUBEOBJ) $(PLUGINLIBDIR)/test_metaplugin_backend.lo
	@echo "Building backend $@ ..."
	$(NO_ECHO)$(LIBTOOL_LINK) --silent $(CXX) $(LDFLAGS) test_kubernetes_backend.lo $(PLUGINLIBDIR)/test_metaplugin_backend.lo -o $@

install: all
	$(MKDIR) $(DESTDIR)$(plugindir)
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bpipe-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/bpipe-fd.la

install-cdp: cdp-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) cdp-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/cdp-fd.la

install-ndmp: ndmp-fd.la ndmp_idx_dump
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) ndmp-fd.la $(DESTDIR)$(plugindir)
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) ndmp_idx_dump $(DESTDIR)$(sbindir)
	$(RMF) $(DESTDIR)$(plugindir)/ndmp-fd.la

install-oracle: oracle-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) oracle-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/oracle-fd.la

install-oracle-sbt: oracle-sbt-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) oracle-sbt-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/oracle-sbt-fd.la

install-postgresql: postgresql-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) postgresql-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/postgresql-fd.la

install-mysql: mysql-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) mysql-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/mysql-fd.la

install-kvm: kvm-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) kvm-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/kvm-fd.la

install-netapp-hfc: netapp-hfc-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) netapp-hfc-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/netapp-hfc-fd.la

install-vsphere: vsphere-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) vsphere-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/vsphere-fd.la

install-rhv: 
	$(MAKE) -C rhv install-rhv

install-sap: sap-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) sap-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/sap-fd.la

install-docker: docker-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) docker-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/docker-fd.la

install-db2: db2-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) db2-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/db2-fd.la

install-xenserver:
	$(MAKE) -C xenserver/src install-xenserver

install-proxmox: proxmox-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) proxmox-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/proxmox-fd.la

install-swift: swift-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) swift-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/swift-fd.la

install-backint: backint hdbbackint
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) backint $(DESTDIR)$(sbindir)
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) hdbbackint $(DESTDIR)$(sbindir)

install-test-plugin: all test-plugins rot13 test-bpipe-fd.la
	$(MKDIR) $(DESTDIR)$(plugindir)
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) test-plugin-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/test-plugin-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) rot13-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/rot13-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) test-deltaseq-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/test-deltaseq-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) test-handlexacl-plugin-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/test-handlexacl-plugin-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) test-bpipe-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/test-bpipe-fd.la

install-test-dedup: test-dedup-fd.la
	$(MKDIR) $(DESTDIR)$(plugindir)
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) test-dedup-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/test-dedup-fd.la

install-delta-plugin: all delta-fd.la
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) delta-fd.la $(DESTDIR)$(plugindir)
	$(RMF) $(DESTDIR)$(plugindir)/delta-fd.la

libtool-clean:
	@find . -name '*.lo' -print | xargs $(LIBTOOL_CLEAN) $(RMF)
	@$(RMF) *.la
	@$(RMF) -r .libs _libs

clean:	libtool-clean
	@rm -f main *.so *.o 1 2 3 *_test ndmp_idx_dump

distclean: clean
	@rm -f Makefile

libtool-uninstall:
	$(LIBTOOL_UNINSTALL) $(RMF) $(DESTDIR)$(plugindir)/bpipe-fd.so

uninstall: @LIBTOOL_UNINSTALL_TARGET@

depend:
